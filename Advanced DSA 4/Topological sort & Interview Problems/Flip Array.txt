				QUESTION
Given an array A of positive elements, you have to flip the sign of some of its elements such that the resultant sum of the elements of array should be minimum non-negative.
Return the minimum number of elements whose sign needs to be flipped such that the resultant sum is minimum non-negative.


Problem Constraints:	1 <= length of(A) <= 100
			Sum of all the elements will not exceed 10,000.

Input Format:
	-> First and only argument is an integer array A.

Output Format:
	-> Return an integer denoting the minimum number of elements whose sign needs to be flipped.

Example Input:
	Input 1:	A = [15, 10, 6]

	Input 2:	A = [14, 10, 4]

Example Output:
	Output 1:	1

	Output 2:	1

Example Explanation:
	Explanation 1:	Here, we will flip the sign of 15 and the resultant sum will be 1.

	Explanation 2:	Here, we will flip the sign of 14 and the resultant sum will be 0.
 			Note that flipping the sign of 10 and 4 also gives the resultant sum 0 but flippings there sign are not minimum.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	// DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    	public int solve(final int[] A) 
	{
        	int n = A.length;
        	int totalSum = 0;
        	for (int num : A) 
		{
            		totalSum += num;
        	}
        	int target = totalSum / 2;
        	boolean[] dp = new boolean[target + 1];
        	int[] flips = new int[target + 1];
        	Arrays.fill(flips, Integer.MAX_VALUE);
        	dp[0] = true;
        	flips[0] = 0;
        	for (int num : A) 
		{
            		for (int j = target; j >= num; j--) 
			{
                		if (dp[j - num]) 
				{
                    			dp[j] = true;
                    			flips[j] = Math.min(flips[j], flips[j - num] + 1);
                		}
            		}
        	}
        	for (int j = target; j >= 0; j--) 
		{
            		if (dp[j]) 
			{
                		return flips[j];
            		}
        	}
        	return 0; 
    	}
}