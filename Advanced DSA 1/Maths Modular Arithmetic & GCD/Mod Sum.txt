				QUESTION
Given an array of integers A, calculate the sum of A[i] % A[j] for all possible i, j pairs. Return sum % (10^9 + 7) as an output.

Problem Constraints:	1 <= length of the array A <= 10^5
			1 <= A[i] <= 10^3

Input Format:
	-> The only argument given is the integer array A.

Output Format:
	-> Return a single integer denoting sum % (10^9 + 7).

Example Input:
	Input 1:	A = [1, 2, 3]

	Input 2:	A = [17, 100, 11]

Example Output:
	Output 1:	5

	Output 2:	61

Example Explanation:
	Explanation 1:	(1 % 1) + (1 % 2) + (1 % 3) + (2 % 1) + (2 % 2) + (2 % 3) + (3 % 1) + (3 % 2) + (3 % 3) = 5

	Explanation 2:  (17 % 17) + (17 % 100) + (17 % 11) + (100 % 17) + (100 % 100) + (100 % 11) + (11 % 17) + (11 % 100) + (11 % 11) = 61 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	public int solve(int[] A) 
	{
        	int mod = 1000000007;
        	int count[] = new int[1001];
        	for(int num:A)
		{
            		count[num]++;
        	}
        	long sum = 0;
        	for(int i=1;i<=1000;i++)
		{
            		if(count[i] == 0)
			{
                		continue;
            		}
            		for(int j=1;j<=1000;j++)
			{
                		if(count[j] == 0)
				{
                    			continue;
                		}
                		sum = (sum + (long) count[i] * count[j] * (i % j)) % mod;
            		}
        	}
        	return (int) sum;
    	}
}