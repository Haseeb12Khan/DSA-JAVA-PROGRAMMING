				QUESTION
Given an integer array A, sort the array using Quick Sort.

Problem Constraints:	1 <= |A| <= 10^5
			1 <= A[i] <= 10^9

Input Format:
	-> First argument is an integer array A.

Output Format:
	-> Return the sorted array.

Example Input:
	Input 1:	A = [1, 4, 10, 2, 1, 5]

	Input 2:	A = [3, 7, 1]

Example Output:
	Output 1:	[1, 1, 2, 4, 5, 10]

	Output 2:	[1, 3, 7]

Example Explanation:
	Explanation 1 and 2:	Return the sorted array.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	private void quickSort(int A[],int low,int high)
	{
        	if(low < high)
		{
            		int pivot = quickSelect(A,low,high);
            		quickSort(A,low,pivot-1);
            		quickSort(A,pivot+1,high);
        	}
    	}
    	private int quickSelect(int A[],int low,int high)
	{
        	int pivot = A[low];
        	int l = low + 1;
        	int r = high;
        	while(l <= r)
		{
            		if(A[l] < pivot)
			{
                		l++;
            		}
            		else if(A[r] > pivot)
			{
                		r--;
            		}
            		else
			{
                		swap(A,l,r);
                		l++;
                		r--;
            		}
        	}
        	swap(A,low,r);
        	return r;
    	}
    	private void swap(int A[],int l,int r)
	{
        	int temp = A[l];
        	A[l] = A[r];
        	A[r] = temp;
    	}
    	public int[] solve(int[] A) 
	{
        	int N = A.length;
        	quickSort(A,0,N-1);
        	return A;
    	}	
}
