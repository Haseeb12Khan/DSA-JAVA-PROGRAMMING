				QUESTION
Given an array A. For every pair of indices i and j (i != j), find the maximum A[i] & A[j].

Problem Constraints:	1 <= len(A) <= 10^5
			1 <= A[i] <= 10^9

Input Format:
	-> The first argument is an integer array A.

Output Format:
	-> Return a single integer that is the maximum A[i] & A[j].

Example Input:
	Input 1:	A = [53, 39, 88]

	Input 2:	A = [38, 44, 84, 12] 

Example Output:
	Output 1:	37
	
	Output 2:	36

Example Explanation:
	Explanation 1:	53 & 39 = 37
			39 & 88 = 0
			53 & 88 = 16
			Maximum among all these pairs is 37

	Explanation 2:	Maximum bitwise and among all pairs is (38, 44) = 36
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	public int solve(int[] A) 
	{
        	int pair = 0;
        	for(int bit=30;bit>=0;bit--)
		{
            		int count = 0;
            		for(int i=0;i<A.length;i++)
			{
                		if((A[i] & (1<<bit)) > 0)
				{
                    			count++;
                		}
            		}
            		if(count >= 2)
			{
                		pair = pair | (1<<bit);
                		for(int i=0;i<A.length;i++)
				{
                    			if((A[i] & (1<<bit)) == 0)
					{
                        			A[i] = 0;
                    			}
                		}
            		}
        	}
        	return pair;
    	}
}