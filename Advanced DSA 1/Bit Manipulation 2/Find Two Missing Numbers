				QUESTION
Given an array A of length N where all the elements are distinct and are in the range [1, N+2].
Two numbers from the range [1, N+2] are missing from the array A. Find the two missing numbers.

Problem Constraints:	1 <= N <= 105
			1 <= A[i] <= N+2

The elements of array A are distinct.

Input Format:
	-> Only argument A is an array of integers

Output Format:
	-> Return a sorted array of size 2 denoting the missing elements.

Example Input:
	Input 1:	A = [3, 2, 4]

	Input 2:	A = [5, 1, 3, 6]

Example Output:
	Output 1:	[1, 5]

	Output 2:	[2, 4]

Example Explanation:
	For Input 1:	The missing numbers are 1 and 5.

	For Input 2:	The missing numbers are 2 and 4.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	public int[] solve(int[] A) 
	{
        	int N = A.length;
        	long totalSum = (N+2L) * (N+3) / 2;
        	long totalSumSquares = (N+2L) * (N+3) * (2*(N+2)+1) / 6;
        	long arraySum = 0;
        	long arraySumSquares = 0;
        	for(int num:A)
		{
            		arraySum += num;
            		arraySumSquares += (long) num * num;
        	}
        	long sumMissing = totalSum - arraySum;
        	long sumSquaresMissing = totalSumSquares - arraySumSquares;
        	long diffMissing = (sumMissing * sumMissing - sumSquaresMissing) / 2;
        	long sumAndDiff = sumMissing + (long) Math.sqrt(sumMissing * sumMissing - 4 * diffMissing);
        	long sumAndDiff2 = sumMissing - (long) Math.sqrt(sumMissing * sumMissing - 4 * diffMissing);
        	int x = (int)(sumAndDiff / 2);
        	int y = (int)(sumAndDiff2 / 2);
        	int res[] = new int[2];
        	if(x>y)
		{
            		res[0] = y;
            		res[1] = x;
        	}
        	else
		{
            		res[0] = x;
            		res[1] = y;
        	}
        	return res;
    	}
}
