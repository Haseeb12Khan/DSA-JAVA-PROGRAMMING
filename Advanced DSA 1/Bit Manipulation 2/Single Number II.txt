				QUESTION
Given an array of integers, every element appears thrice except for one, which occurs once.
Find that element that does not appear thrice.

NOTE: Your algorithm should have a linear runtime complexity.

Could you implement it without using extra memory?

Problem Constraints:	2 <= A <= 5*10^6
			0 <= A <= INTMAX

Input Format:
	-> First and only argument of input contains an integer array A.

Output Format:
	-> Return a single integer.

Example Input:
	Input 1:	A = [1, 2, 4, 3, 3, 2, 2, 3, 1, 1]

	Input 2:	A = [0, 0, 0, 1]

Example Output:
	Output 1:	4

	Output 2:	1

Example Explanation:
	Explanation 1:	4 occurs exactly once in Input 1.
	
	Explanation 2:	1 occurs exactly once in Input 2.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	// DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    	public int singleNumber(final int[] A) 
	{
        	int unique = 0;
        	for(int bit=0;bit<32;bit++)
		{
            		int count = 0;
            		for(int i=0;i<A.length;i++)
			{
                		if((A[i] & (1<<bit)) > 0)
				{
                    			count++;
                		}
            		}
            		if(count%3 != 0)
			{
                		unique = unique | (1<<bit);
            		}
        	}
        	return unique;
    	}
}