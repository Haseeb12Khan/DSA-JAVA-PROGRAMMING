				QUESTION
Given an array of positive integers A, two integers appear only once, and all the other integers appear twice.
Find the two integers that appear only once.

Note: Return the two numbers in ascending order.

Problem Constraints:	2 <= |A| <= 100000
			1 <= A[i] <= 10^9

Input Format:
	-> The first argument is an array of integers of size N.

Output Format:
	-> Return an array of two integers that appear only once.

Example Input:
	Input 1:	A = [1, 2, 3, 1, 2, 4]

	Input 2:	A = [1, 2]

Example Output:
	Output 1:	[3, 4]

	Output 2:	[1, 2]

Example Explanation:
	Explanation 1:	3 and 4 appear only once.

	Explanation 2:	1 and 2 appear only once.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	public int[] solve(int[] A) 
	{
        	int val = 0;
        	for(int i=0;i<A.length;i++)
		{
            		val ^= A[i];
        	}
        	int pos = 0;
        	for(int i=0;i<32;i++)
		{
            		if((val & (1<<i)) > 0)
			{
                		pos = i;
                		break;
            		}
        	}
        	int group0 = 0;
        	int group1 = 0;
        	for(int i=0;i<A.length;i++)
		{
            		if((A[i] & (1<<pos)) > 0)
			{
                		group1 ^= A[i];
            		}
            		else
			{
                		group0 ^= A[i];
            		}
        	}
        	int res[] = new int[2];
        	if(group0 > group1)
		{
            		res[0] = group1;
            		res[1] = group0;
        	}
        	else
		{
            		res[0] = group0;
            		res[1] = group1;
        	}
        	return res;
    	}
}