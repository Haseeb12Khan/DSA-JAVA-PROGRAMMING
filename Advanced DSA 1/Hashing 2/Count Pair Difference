				QUESTION
You are given an array A of N integers and an integer B. Count the number of pairs (i,j) such that A[i] - A[j] = B and i â‰  j.
Since the answer can be very large, return the remainder after dividing the count with (10^9 + 7).

Problem Constraints:	1 <= N <= 10^5
			1 <= A[i] <= 10^9
			1 <= B <= 10^9

Input Format:
	-> First argument A is an array of integers and second argument B is an integer.

Output Format:
	-> Return an integer.

Example Input:
	Input 1:	A = [3, 5, 1, 2]
			B = 4

	Input 2:	A = [1, 2, 1, 2]
			B = 1

Example Output:
	Output 1:	1

	Output 2:	4

Example Explanation:
	Example 1:	The only pair is (2, 3) which gives difference as 4

	Example 2:	The pair which gives difference as 3 are (2, 1), (4, 1), (2, 3) and (4, 3). 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	public int solve(int[] A, int B) 
	{
        	int mod  =  1000000007;
       		HashMap<Integer,Integer> hm = new HashMap<>();
        	int pairs = 0;
        	for(int i=0;i<A.length;i++)
		{
           	 	int need1 = A[i] - B;
            		if(hm.containsKey(need1))
			{
                		pairs = (pairs + hm.get(need1)) % mod;
            		}

            		int need2 = A[i] + B;
            		if(hm.containsKey(need2))
			{
                		pairs = (pairs + hm.get(need2)) % mod;
            		}

            		hm.put(A[i], hm.getOrDefault(A[i],0)+1);
        	}
        	return  pairs;
    	}
}
