				QUESTION
Given an Array of integers B, and a target sum A. Check if there exists a pair (i,j) such that B[i] + B[j] = A and i!=j.

Problem Constraints:	1 <= Length of array B <= 10^5
			0 <= B[i] <= 10^9
			0 <= A <= 10^9

Input Format:
	-> First argument A is the Target sum, and second argument is the array B

Output Format:
	-> Return an integer value 1 if there exists such pair, else return 0.

Example Input:
	Input 1:	A = 8   
			B = [3, 5, 1, 2, 1, 2]

	Input 2:	A = 21   
			B = [9, 10, 7, 10, 9, 1, 5, 1, 5]

Example Output:
	Output 1:	1

	Output 2:	0

Example Explanation:
	Example 1:	It is possible to obtain sum 8 using 3 and 5.

	Example 2:	There is no such pair exists.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	public int solve(int A, int[] B) 
	{
        	HashSet<Integer> hs = new HashSet<>();
        	for(int i=0;i<B.length;i++)
		{
            		int need = A - B[i];
            		if(hs.contains(need))
			{
                		return 1;
            		}
            		hs.add(B[i]);
        	}
        	return 0;
    	}
}
