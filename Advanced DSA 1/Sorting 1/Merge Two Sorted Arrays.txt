				QUESTION
Given two sorted integer arrays A and B, merge B and A as one sorted array and return it as an output.

Note: A linear time complexity is expected and you should avoid use of any library function.

Problem Constraints:	-2×10^9 <= A[i], B[i] <= 2×10^9
			1 <= |A|, |B| <= 5×10^4

Input Format:
	-> First Argument is a 1-D array representing  A.
	-> Second Argument is also a 1-D array representing B.

Output Format:
	-> Return a 1-D vector which you got after merging A and B.

Example Input:
	Input 1:	A = [4, 7, 9]
			B = [2, 11, 19]

	Input 2:	A = [1]
			B = [2]

Example Output:
	Output 1:	[2, 4, 7, 9, 11, 19]

	Output 2:	[1, 2]

Example Explanation:
	Explanation 1:	Merging A and B produces the output as described above.

	Explanation 2:	Merging A and B produces the output as described above.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	// DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    	public int[] solve(final int[] A, final int[] B) 
	{
        	int N = A.length;
        	int M = B.length;
        	int C[] = new int[N+M];
        	int a = 0;
        	int b = 0;
        	int c = 0;
        	while(a<N && b<M)
		{
            		if(A[a] < B[b])
			{
                		C[c] = A[a];
                		a++;
                		c++;
            		}
            		else
			{
                		C[c] = B[b];
                		b++;
                		c++;
            		}
        	}
        	while(a<N)
		{
            		C[c] = A[a];
            		a++;
            		c++;
        	}
        	while(b<M)
		{
            		C[c] = B[b];
            		b++;
            		c++;
        	}
        	return C;
    	}
}