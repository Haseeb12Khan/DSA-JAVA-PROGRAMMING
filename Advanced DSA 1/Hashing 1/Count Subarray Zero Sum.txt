				QUESTION
Given an array A of N integers.
Find the count of the subarrays in the array which sums to zero. Since the answer can be very large, return the remainder on dividing the result with 10^9+7

Problem Constraints:	1 <= N <= 10^5
			-10^9 <= A[i] <= 10^9

Input Format:
	-> Single argument which is an integer array A.

Output Format:
	-> Return an integer.

Example Input:
	Input 1:	A = [1, -1, -2, 2]

	Input 2:	A = [-1, 2, -1]

Example Output:
	Output 1:	3

	Output 2:	1

Example Explanation:
	Explanation 1:	The subarrays with zero sum are [1, -1], [-2, 2] and [1, -1, -2, 2].

	Explanation 2:	The subarray with zero sum is [-1, 2, -1].
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	public int solve(int[] A) 
	{
        	int mod = 1000000007;
        	long total = 0;
        	int count = 0;
        	HashMap<Long,Integer> hm = new HashMap<>();
        	hm.put(0L,1);
        	for(int i=0;i<A.length;i++)
		{
            		total += A[i];
            		if(hm.containsKey(total))
			{
                		count = (count + hm.get(total)) % mod;
            		}
            		hm.put(total,hm.getOrDefault(total,0)+1);
        	}
        	return count;
    	}
}