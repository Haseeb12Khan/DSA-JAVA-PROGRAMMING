				QUESTION
Misha likes finding all Subarrays of an Array. Now she gives you an array A of N elements and told you to find the number of subarrays of A, that have unique elements.
Since the number of subarrays could be large, return value % 10^9 +7.

Problem Constraints:	1 <= N <= 10^5
			1 <= A[i] <= 10^6

Input Format:
	-> The only argument given is an Array A, having N integers.

Output Format:
	-> Return the number of subarrays of A, that have unique elements.

Example Input:
	Input 1:	A = [1, 1, 3]

	Input 2:	A = [2, 1, 2]

Example Output:
	Output 1:	4

	Output 1:	5

Example Explanation:
	Explanation 1:	Subarrays of A that have unique elements only:
 			[1], [1], [1, 3], [3]

	Explanation 2:	Subarrays of A that have unique elements only:
 			[2], [1], [2, 1], [1, 2], [2]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	public int solve(int[] A) 
	{
        	int mod = 1000000007;
        	int n = A.length;
        	HashMap<Integer,Integer> freq = new HashMap<>();
        	int start = 0;
        	int count = 0;

        	for(int end=0;end<n;end++)
		{
            		if(freq.containsKey(A[end]))
			{
                		start = Math.max(start,freq.get(A[end])+1);
            		}
            		freq.put(A[end],end);
            		count = count+end-start+1;
            		count = count % mod;
        	}
        	return count;
    	}
}