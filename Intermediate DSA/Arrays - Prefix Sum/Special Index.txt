				QUESTION
Given an array, arr[] of size N, the task is to find the count of array indices such that removing an element from these indices makes the sum of even-indexed and odd-indexed array elements equal.

Problem Constraints:	1 <= N <= 10^5
			-10^5 <= A[i] <= 10^5
			Sum of all elements of A <= 10^9

Input Format:
	-> First argument contains an array A of integers of size N

Output Format:
	-> Return the count of array indices such that removing an element from these indices makes the sum of even-indexed and odd-indexed array elements equal.

Example Input:
	Input 1:	A = [2, 1, 6, 4]

	Input 2:	A = [1, 1, 1]

Example Output:
	Output 1:	1

	Output 2:	3

Example Explanation:
	Explanation 1:	Removing arr[1] from the array modifies arr[] to { 2, 6, 4 } such that, arr[0] + arr[2] = arr[1]. 
			Therefore, the required output is 1. 

	Explanation 2:	Removing arr[0] from the given array modifies arr[] to { 1, 1 } such that arr[0] = arr[1] 
			Removing arr[1] from the given array modifies arr[] to { 1, 1 } such that arr[0] = arr[1] 
			Removing arr[2] from the given array modifies arr[] to { 1, 1 } such that arr[0] = arr[1] 
			Therefore, the required output is 3.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	public int solve(int[] A) 
	{
        	int count = 0;
        	int sumOdd = 0;
        	int sumEven = 0;

        	int prefixEven[] = new int[A.length];
        	prefixEven[0] = A[0];
        	for(int i=1;i<A.length;i++)
		{
            		int val = 0;
            		if(i%2 == 0)
			{
                		val = A[i];
            		}
            		prefixEven[i] = prefixEven[i-1] + val;
        	}

        	int prefixOdd[] = new int[A.length];
        	prefixOdd[0] = 0;
        	for(int i=1;i<A.length;i++)
		{
            		int val = 0;
            		if(i%2 == 1)
			{
                		val = A[i];
            		}
            		prefixOdd[i] = prefixOdd[i-1] + val;
        	}

        	for(int i=0;i<A.length;i++)
		{
            		if(i == 0)
			{
                		sumOdd = prefixEven[A.length-1] - prefixEven[i];
                		sumEven = prefixOdd[A.length-1] - prefixOdd[i];
            		}
            		else
			{
                		sumOdd = prefixOdd[i-1] + prefixEven[A.length-1] - prefixEven[i];
                		sumEven = prefixEven[i-1] + prefixOdd[A.length-1] - prefixOdd[i];
            		}
            		if(sumOdd == sumEven)
			{
                		count++;
            		}
        	}
        	return count;
    	}
}