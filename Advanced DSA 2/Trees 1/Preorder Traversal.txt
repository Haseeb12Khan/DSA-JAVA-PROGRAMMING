				QUESTION
Given a binary tree, return the preorder traversal of its node's values.

Problem Constraints:	1 <= number of nodes <= 10^5

Input Format:
	-> First and only argument is root node of the binary tree, A.

Output Format:
	-> Return an integer array denoting the preorder traversal of the given binary tree.

Example Input:
Input 1:
   1
    \
     2
    /
   3

Input 2:
   1
  / \
 6   2
    /
   3

Example Output:
	Output 1:	[1, 2, 3]

	Output 2:	[1, 6, 2, 3]

Example Explanation:
	Explanation 1:	The Preoder Traversal of the given tree is [1, 2, 3].

	Explanation 2:	The Preoder Traversal of the given tree is [1, 6, 2, 3].
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

class TreeNode 
{
	int val;
      	TreeNode left;
      	TreeNode right;
      	TreeNode(int x) 
	{
       		val = x;
       		left=null;
       		right=null;
      	}
}

public class Solution 
{
    	ArrayList<Integer> ans = new ArrayList<>();
    	public ArrayList<Integer> preorderTraversal(TreeNode A) 
	{
        	if(A == null)
		{
            		return ans;
        	}
        	ans.add(A.val);
        	preorderTraversal(A.left);
        	preorderTraversal(A.right);
        	return ans;
    	}
}