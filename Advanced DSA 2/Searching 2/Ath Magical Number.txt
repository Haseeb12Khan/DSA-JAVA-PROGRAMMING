				QUESTION
You are given three positive integers, A, B, and C. Any positive integer is magical if divisible by either B or C.

Return the Ath smallest magical number. Since the answer may be very large, return modulo 10^9 + 7.

Note: Ensure to prevent integer overflow while calculating.

Problem Constraints:	1 <= A <= 10^9
			2 <= B, C <= 40000

Input Format:
	-> The first argument given is an integer A.
	-> The second argument given is an integer B.
	-> The third argument given is an integer C.

Output Format:
	-> Return the Ath smallest magical number. Since the answer may be very large, return modulo 10^9 + 7.

Example Input:
	Input 1:	A = 1
 			B = 2
 			C = 3

	Input 2:	A = 4
 			B = 2
 			C = 3

Example Output:
	Output 1:	2

	Output 2:	6

Example Explanation:
	Explanation 1:	1st magical number is 2.

	Explanation 2:	First four magical numbers are 2, 3, 4, 6 so the 4th magical number is 6.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

public class Solution 
{
    	private long gcd(long a,long b)
	{
        	if(b == 0)
		{
            		return a;
        	}
        	return gcd(b,a % b);
    	}
    	private long lcm(long a,long b)
	{
        	return (a * b / gcd(a,b));
    	}
    	public int solve(int A, int B, int C) 
	{
        	long mod = 1000000007;
        	long low = Math.min(B,C);
        	long high = A * low;
        	long lcm = lcm(B,C);
        	while(low < high)
		{
            		long mid = low + (high-low)/2;
            		long count = (mid/B) + (mid/C) - (mid/lcm);
            		if(count < A)
			{
                		low = mid+1;
            		}
            		else
			{
                		high = mid;
            		}
        	}
        	return (int)(low % mod);
    	}
}